#include<iostream>
#include<vector>
using namespace std;

void merge(int arr[],int start,int mid,int end){
    vector<int>temp(end-start+1);
    int left=start,right=mid+1,index=0;
    while(left<=mid && right<=end){
    if(arr[left]<=arr[right]){
        temp[index]=arr[left];
        index++;
        left++;
        
    }
    else{
        temp[index]=arr[right];
        index++;
        right++;
    }
    
    
    }
    //left array is not empty
    while(left<=mid){
    temp[index]=arr[left];
    left++;
    index++;
    }
     while(right<=end){
    temp[index]=arr[right];
    right++;
    index++;
    }
    //put these valuein array
    index=0;
    while(start<=end){
        arr[start]=temp[index];
    }
    
}
void mergeSort(int arr[],int start,int end){
if(start==end)
{
    return;
};

int mid=start+(end-start)/2;
//left side
mergeSort(arr,start,mid);
//right side
mergeSort(arr,mid+1,end);
//merge two sorted halves
merge(arr,start,mid,end);
}


int main() 
{
    int arr[10]={4,5,8,3,6,4,1,2,9,10};
    mergeSort(arr,0,9);
for (int i = 0; i < 10; i++)
{
    cout<<arr[i]<<" ";
}

}
