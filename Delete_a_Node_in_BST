link=https://www.geeksforgeeks.org/problems/delete-a-node-from-bst/1

Node *deleteNode(Node *root, int target) {
         if (!root) {
            return NULL;
        }
        if (root->data > target) {
            root->left = deleteNode(root->left, target);
            return root;
        } else if (root->data < target) {
            root->right = deleteNode(root->right, target);
            return root;
        } else {
            // leaf exist
            if (!root->left && !root->right) {
                delete root;
                return NULL;
            }
            // if 1(left) child exist
            else if (!root->left) {
                Node* temp = root->right;
                delete root;
                return temp;
            }
            // right child exist
            else if (!root->right) {
                Node* temp = root->left;
                delete root;
                return temp;
            }
            // 2child exist
            else {
                Node* child = root->left;
                Node* parent = root;
                while(child->right){
                    parent=child;
                    child=child->right;
                }
                if(root!=parent){
                    parent->right=child->left;
                    child->left=root->left;
                    child->right=root->right;
                }
               
                   
               
                    child->right=root->right;
                    delete root;
                    return child;
                
            }
        }
    }
